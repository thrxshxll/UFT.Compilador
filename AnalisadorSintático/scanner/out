parsing content
var n, f;  
begin  
  n <= 0;  
  f <= 1;  
  while n # 16 do  
  begin  
    n <= n + 1;  
    f <= f * n;  
  end;  
end.



matching rule KeywordRule: <re.Match object; span=(0, 3), match='var'>

token extraido: <Token class: TokenClass.KEYWORD, value: var>


matching rule IdRule: <re.Match object; span=(0, 1), match='n'>

token extraido: <Token class: TokenClass.ID, value: n>


matching rule DelimiterRule: <re.Match object; span=(0, 1), match=','>

token extraido: <Token class: TokenClass.DELIMITER, value: ,>


matching rule IdRule: <re.Match object; span=(0, 1), match='f'>

token extraido: <Token class: TokenClass.ID, value: f>


matching rule DelimiterRule: <re.Match object; span=(0, 1), match=';'>

token extraido: <Token class: TokenClass.DELIMITER, value: ;>


matching rule KeywordRule: <re.Match object; span=(0, 5), match='begin'>

token extraido: <Token class: TokenClass.KEYWORD, value: begin>


matching rule IdRule: <re.Match object; span=(0, 1), match='n'>

token extraido: <Token class: TokenClass.ID, value: n>


matching rule OperatorRule: <re.Match object; span=(0, 2), match='<='>

token extraido: <Token class: TokenClass.OPERATOR, value: <=>


